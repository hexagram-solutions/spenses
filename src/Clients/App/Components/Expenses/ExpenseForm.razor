@using Spenses.Shared.Models.Expenses
@using Spenses.Shared.Models.Homes
@using Spenses.Shared.Validators.Expenses
@using Spenses.App.Store.Expenses
@using Spenses.App.Store.Homes
@using Spenses.Shared.Models.ExpenseCategories
@using Spenses.App.Store.ExpenseCategories
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<Validate ValidationProperties="@(ValidationProperties.Set.FluentValidator<ExpensePropertiesValidator>())"/>

<MudGrid>
    <MudItem xs="4">
        <MudNumericField @bind-Value="Expense.Amount"
                         Label="Amount"
                         HelperText="The expense amount"
                         Format="C"
                         Min="0.00m"
                         Max="999999.99m"
                         Required
                         For="@(() => Expense.Amount)"/>
    </MudItem>
    <MudItem xs="4">
        <MudDatePicker @bind-Value="DateValue"
                       Label="Date"
                       HelperText="The date the expense was paid"/>
    </MudItem>
    <MudItem xs="4">
        <MudSelect T="Guid"
                   @bind-SelectedValue="Expense.PaidByMemberId"
                   Label="Paid by"
                   HelperText="The home member that paid the expense"
                   For="@(() => Expense.PaidByMemberId)">
            @foreach (var member in Home.Members.OrderBy(m => m.Name))
            {
                <MudSelectItem Value="@member.Id">
                    @member.Name
                </MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem xs="6">
        <MudTextField @bind-Value="Expense.Note"
                      Label="Note"
                      HelperText="Optional details for this expense"
                      For="@(() => Expense.Note)">
        </MudTextField>
    </MudItem>
    <MudItem xs="6">
        <MudSelect T="Guid"
                   @bind-SelectedValue="Expense.CategoryId"
                   Label="Category"
                   HelperText="The category this expense falls under"
                   For="@(() => Expense.CategoryId)">
            @foreach (var category in Categories)
            {
                <MudSelectItem Value="@category.Id">
                    @category.Name
                </MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem xs="12">
        <MudAutocomplete T="string"
                         Value="TagValue"
                         ValueChanged="s => ExpenseTags.Add(s)"
                         Label="Tags"
                         HelperText="Add or choose existing tags for this expense"
                         SearchFunc="SearchTags"
                         ResetValueOnEmptyText
                         CoerceValue
                         AdornmentIcon="@Icons.Material.Filled.Search"
                         AdornmentColor="Color.Primary"/>

        <MudChipSet AllClosable="true" OnClose="chip => ExpenseTags.Remove(chip.Text)">
            @foreach (var tag in ExpenseTags)
            {
                <MudChip Text="@tag" />
            }
        </MudChipSet>
    </MudItem>
</MudGrid>

@using Spenses.App.Store.Homes
@using Spenses.Shared.Models.Homes
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<MudPaper Class="pa-4">
    <MudStack>
        <div class="align-start d-flex">
            <MudText Typo="Typo.h5">Balance Breakdown</MudText>
            <MudSpacer/>
            <MudMenu Label="Select period"
                     Variant="Variant.Filled"
                     Color="Color.Primary"
                     FullWidth="true"
                     AnchorOrigin="Origin.BottomCenter"
                     TransformOrigin="Origin.TopCenter">
                <MudMenuItem>This month</MudMenuItem>
                <MudMenuItem>Last month</MudMenuItem>
                <MudMenuItem>Custom</MudMenuItem> @* TODO: open month picker in dialog mode*@
            </MudMenu>
        </div>
        <MudExpansionPanels MultiExpansion="true">
            @foreach (var balance in BalanceBreakdown?.MemberBalances ?? [])
            {
                <MudExpansionPanel IsExpanded>
                    <TitleContent>
                        <MudStack Row
                                  AlignItems="AlignItems.Center">
                            <MudAvatar Size="Size.Small">
                                <MudImage Src="@balance.Member.AvatarUrl"/>
                            </MudAvatar>
                            <MudText>@balance.Member.Name</MudText>
                        </MudStack>
                    </TitleContent>
                    <ChildContent>
                        <MudTable Items="balance.Debts"
                                  Dense>
                            <HeaderContent>
                                <MudTh>Owed to</MudTh>
                                <MudTh>Total owed</MudTh>
                                <MudTh>Total paid</MudTh>
                                <MudTh>Balance owing</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Owed member">
                                    <MudStack Row>
                                        <MudAvatar Size="Size.Small">
                                            <MudImage Src="@context.OwedTo.AvatarUrl"/>
                                        </MudAvatar>
                                        <MudText>@context.OwedTo.Name</MudText>
                                    </MudStack>
                                </MudTd>
                                <MudTd DataLabel="Expenses">@context.TotalOwed</MudTd>
                                <MudTd DataLabel="Payments">@context.TotalPaid</MudTd>
                                <MudTd DataLabel="Balance owing">@context.BalanceOwing</MudTd>
                            </RowTemplate>
                        </MudTable>
                    </ChildContent>
                </MudExpansionPanel>
            }
        </MudExpansionPanels>
    </MudStack>
</MudPaper>

@code {
    [Inject] private IState<HomesState> HomesState { get; set; } = null!;

    [Inject] private IDispatcher Dispatcher { get; set; } = null!;

    private Home Home => HomesState.Value.CurrentHome!;

    private static readonly DateTime Today = DateTime.Today;

    private DateOnly PeriodStart { get; } = new(Today.Year, Today.Month, 1);

    private DateOnly PeriodEnd { get; } = new(Today.Year, Today.Month, DateTime.DaysInMonth(Today.Year, Today.Month));

    private BalanceBreakdown? BalanceBreakdown => HomesState.Value.BalanceBreakdown;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Dispatcher.Dispatch(new BalanceBreakdownRequestedAction(Home.Id, PeriodStart, PeriodEnd));
    }

}

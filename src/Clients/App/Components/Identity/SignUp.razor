@page "/sign-up"
@using Morris.Blazor.FluentValidation
@using Morris.Blazor.Validation
@using Spenses.Shared.Validators.Authentication

<PageTitle>Sign up</PageTitle>

<h2>Sign up</h2>

@if (Errors.Count != 0)
{
    foreach (var error in Errors)
    {
        <div class="alert alert-danger">@error</div>
    }
}

<EditForm Model="RegisterRequest"
          asp-route-returnUrl="@ReturnUrl"
          method="post"
          OnValidSubmit="RegisterUser"
          FormName="register">

    <Validate ValidationProperties="@(ValidationProperties.Set.FluentValidator<RegisterRequestValidator>())"/>

    <FluentStack Orientation="Orientation.Vertical">
        <FluentTextField Name="RegisterRequest.Email"
                         @bind-Value="RegisterRequest.Email"
                         AutoComplete="username"
                         Required="true"
                         Placeholder="name@example.com"
                         Label="Email"
                         Style="width: 100%"/>
        <ValidationMessage For="() => RegisterRequest.Email"
                           class="text-danger"/>

        <FluentTextField type="password"
                         Name="RegisterRequest.Password"
                         @bind-Value="RegisterRequest.Password"
                         AutoComplete="current-password"
                         Required="true"
                         Placeholder="password"
                         Label="Password"
                         Style="width: 100%"/>
        <ValidationMessage For="() => RegisterRequest.Password"
                           class="text-danger"/>

        <FluentButton Type="ButtonType.Submit"
                      Appearance="Appearance.Accent"
                      Style="width: 100%">
            Log in
        </FluentButton>
    </FluentStack>
</EditForm>

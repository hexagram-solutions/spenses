@using Spenses.Shared.Models.Members
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<MudTable Items="Members"
          Loading="IsLoading">
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Contact email</MudTh>
        <MudTh>Default split %</MudTh>
        <MudTh>Status</MudTh>
        <MudTh Style="text-align:right">Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">
            <MemberNameDisplay Member="@context"></MemberNameDisplay>
        </MudTd>
        <MudTd DataLabel="Contact email">
            @if (!string.IsNullOrEmpty(context.ContactEmail))
            {
                @context.ContactEmail
            }
            else
            {
                <div class="mud-text-secondary">
                    <i>None</i>
                </div>
            }
        </MudTd>
        <MudTd DataLabel="Default split percentage">
            <samp>
                @($"{context.DefaultSplitPercentage:P2}")
            </samp>
        </MudTd>
        <MudTd DataLabel="Status">
            @StatusChip(context.Status)
        </MudTd>
        <MudTd DataLabel="Actions"
               Style="text-align:right">
            @if (context.Status is MemberStatus.Active && context.User is null)
            {
                <MudTooltip Text="Invite">
                    <MudIconButton Icon="@Icons.Material.Rounded.Send"
                                   Color="Color.Info"
                                   Size="Size.Small"
                                   OnClick="@(args => OnSendInvitationClicked(args, context))" />
                </MudTooltip>
            }

            @if (context.Status is MemberStatus.Invited)
            {
                <MudTooltip Text="Cancel invitation">
                    <MudIconButton Icon="@Icons.Material.Rounded.CancelScheduleSend"
                                   Color="Color.Warning"
                                   Size="Size.Small"
                                   OnClick="@(args => CancelInvitation(args, context))" />
                </MudTooltip>
            }

            @if (context.Status is MemberStatus.Active or MemberStatus.Invited)
            {
                <MudTooltip Text="Edit">
                    <EditIconButton OnClick="@(args => OnEditClicked(args, context.Id))"/>
                </MudTooltip>

                @if (context.User?.Id == MeState.Value.CurrentUser?.Id)
                {
                    <MudTooltip Text="Leave">
                        <MudIconButton Icon="@Icons.Material.Rounded.ExitToApp"
                                       Color="Color.Error"
                                       Size="Size.Small"
                                       OnClick="@(args => OnLeaveHomeClicked(args))" />
                    </MudTooltip>
                }
                else
                {
                    <MudTooltip Text="Remove">
                        <RemoveIconButton OnClick="@(args => OnRemoveClicked(args, context))"/>
                    </MudTooltip>
                }
            }
            else
            {
                <MudTooltip Text="Reactivate"
                            Inline>
                    <MudIconButton Icon="@Icons.Material.Rounded.Refresh"
                                   Color="Color.Primary"
                                   Size="Size.Small"
                                   OnClick="@(args => OnReactivateClicked(args, context.Id))"/>
                </MudTooltip>
            }
        </MudTd>
    </RowTemplate>
</MudTable>

@* ReSharper disable InconsistentNaming *@
@* ReSharper disable UnusedParameter.Local *@

@code
{
    private RenderFragment StatusChip(MemberStatus status) => __builder =>
    {
        var color = status switch
        {
            MemberStatus.Invited => Color.Info,
            MemberStatus.Active => Color.Success,
            MemberStatus.Inactive => Color.Default,
            _ => throw new ArgumentOutOfRangeException(nameof(status), status, null)
        };

        <MudChip Text="@status.ToString()"
                 Color="color"/>
    };
}

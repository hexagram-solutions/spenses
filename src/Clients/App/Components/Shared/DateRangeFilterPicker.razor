@using MudBlazor.Extensions
@using System.Globalization

<MudDateRangePicker @ref="PeriodPickerRef"
                    DateRange="DateRange"
                    DateRangeChanged="DateRangeChanged"
                    StartMonth="DateRange.Start.GetValueOrDefault().AddMonths(-1)"
                    Label="@Label"
                    Variant="@Variant"
                    PickerVariant="PickerVariant.Dialog"
                    Margin="Margin.Dense"
                    AutoClose>
    <PickerActions>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="SetPeriodToLastMonth">
            Last month
        </MudButton>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="SetPeriodToThisMonth">
            This month
        </MudButton>
        <MudSpacer/>
        <MudButton Variant="Variant.Outlined"
                   OnClick="@(() => PeriodPickerRef.Close())">
            Close
        </MudButton>
    </PickerActions>
</MudDateRangePicker>

@code {
    [Parameter]
    [EditorRequired]
    public string Label { get; set; } = null!;

    [Parameter]
    public Variant Variant { get; set; } = Variant.Outlined;

    [Parameter]
    [EditorRequired]
    public DateRange DateRange { get; set; } = new();

    [Parameter]
    public EventCallback<DateRange> DateRangeChanged { get; set; }

    private MudDateRangePicker PeriodPickerRef { get; set; } = new();

    private void SetPeriodToThisMonth()
    {
        var today = DateTime.Today;

        var daysInMonth = DateTime.DaysInMonth(today.Year, today.Month);
        var start = new DateOnly(today.Year, today.Month, 1);
        var end = new DateOnly(today.Year, today.Month, daysInMonth);

        DateRange = new DateRange(
            start.ToDateTime(TimeOnly.MinValue),
            end.ToDateTime(TimeOnly.MinValue));

        PeriodPickerRef.Close();
    }

    private void SetPeriodToLastMonth()
    {
        var today = DateTime.Today;

        var start = new DateOnly(today.Year, today.Month, 1).AddMonths(-1);
        var daysInMonth = DateTime.DaysInMonth(start.Year, start.Month);

        var end = new DateOnly(start.Year, start.Month, daysInMonth);

        DateRange = new DateRange(
            start.ToDateTime(TimeOnly.MinValue),
            end.ToDateTime(TimeOnly.MinValue));

        PeriodPickerRef.Close();
    }

}

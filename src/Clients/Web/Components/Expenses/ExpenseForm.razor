@using Blazorise.FluentValidation
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<Validations @ref="Validations"
             Mode="ValidationMode.Manual"
             Model="@Expense"
             HandlerType="typeof(FluentValidationHandler)">
    <Fields>
        <Validation>
            <Field>
                <FieldLabel RequiredIndicator>
                    Amount
                </FieldLabel>
                <FieldBody>
                    <Addons>
                        <Addon AddonType="AddonType.Start">
                            <AddonLabel>$</AddonLabel>
                        </Addon>
                        <Addon AddonType="AddonType.Body">
                            <NumericPicker @bind-Value="Expense.Amount"
                                           TValue="decimal"
                                           Placeholder="1.23"
                                           Min="0.00m"
                                           Max="999999.99m">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </NumericPicker>
                        </Addon>
                    </Addons>
                    <FieldHelp>The expense amount</FieldHelp>
                </FieldBody>
            </Field>
        </Validation>
        <Validation>
            <Field>
                <FieldLabel RequiredIndicator>
                    Date
                </FieldLabel>
                <FieldBody>
                    <DatePicker @bind-Date="Expense.Date" TValue="DateOnly" StaticPicker="false">
                        <Feedback>
                            <ValidationError/>
                        </Feedback>
                    </DatePicker>
                    <FieldHelp>The date the expense was paid</FieldHelp>
                </FieldBody>
            </Field>
        </Validation>
        <Validation>
            <Field>
                <FieldLabel RequiredIndicator>
                    Paid by
                </FieldLabel>
                <FieldBody>
                    <Select TValue="Guid" @bind-SelectedValue="Expense.PaidByMemberId">
                        <ChildContent>
                            @foreach (var member in Home.Members.OrderBy(m => m.Name))
                            {
                                <SelectItem Value="@member.Id">
                                    @member.Name
                                </SelectItem>
                            }
                        </ChildContent>
                        <Feedback>
                            <ValidationError/>
                        </Feedback>
                    </Select>
                    <FieldHelp>The home member that paid the expense</FieldHelp>
                </FieldBody>
            </Field>
        </Validation>
    </Fields>
    <Div Margin="Margin.IsAuto.OnAll">
        <Heading Size="HeadingSize.Is4">Splitting options</Heading>
        <Table Narrow Borderless FullWidth>
            <TableBody>
                @foreach (var expenseShare in Expense.ExpenseShares)
                {
                    <ExpenseShareRow ExpenseShare="expenseShare"
                                     Expense="Expense"
                                     Member="Home.Members.Single(m => m.Id == expenseShare.OwedByMemberId)"/>
                }
            </TableBody>
        </Table>
    </Div>
    <Fields>
        <Validation>
            <Field>
                <FieldLabel>
                    Note
                </FieldLabel>
                <FieldBody>
                    <TextEdit @bind-Text="Expense.Note">
                        <Feedback>
                            <ValidationError/>
                        </Feedback>
                    </TextEdit>
                    <FieldHelp>Optional details for this expense</FieldHelp>
                </FieldBody>
            </Field>
        </Validation>
        <Validation>
            <Field>
                <FieldLabel>
                    Category
                </FieldLabel>
                <FieldBody>
                    <Select TValue="Guid" @bind-SelectedValue="Expense.CategoryId">
                        <ChildContent>
                            @foreach (var category in Categories)
                            {
                                <SelectItem TValue="Guid" Value="@category.Id">
                                    @category.Name
                                </SelectItem>
                            }
                        </ChildContent>
                        <Feedback>
                            <ValidationError/>
                        </Feedback>
                    </Select>
                    <FieldHelp>Select a category, or create a new one</FieldHelp>
                </FieldBody>
            </Field>
        </Validation>
    </Fields>
    <Fields>
        <Field>
            <FieldLabel>
                Tags
            </FieldLabel>
            <FieldBody>
                <Autocomplete TItem="string"
                              TValue="string"
                              Data="AvailableTags"
                              TextField="@(item => item)"
                              ValueField="@(item => item)"
                              Placeholder="Search..."
                              SelectionMode="AutocompleteSelectionMode.Checkbox"
                              FreeTyping
                              @bind-SelectedTexts="ExpenseTags">
                    <FieldHelp>Add or choose existing tags for the expense</FieldHelp>
                </Autocomplete>
            </FieldBody>
        </Field>
    </Fields>
</Validations>
